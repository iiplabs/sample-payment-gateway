services:
  mysql:
    container_name: spg-db
    image: mysql:8.0.36
    command: --default-authentication-plugin=mysql_native_password --lower_case_table_names=1
    restart: unless-stopped
    volumes:
      - db-data:/var/lib/mysql
      - ./docker/db/scripts/backend:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: ${SQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${SQL_DATABASE}
      MYSQL_USER: ${SQL_USER}
      MYSQL_PASSWORD: ${SQL_PASSWORD}
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '${MYSQL_PORT}:3306'

  backend:
    build:
      context: ./backend/
      dockerfile: Dockerfile
      args:
        BUILD_PROFILE: ${BUILD_PROFILE}
    image: spg-backend:latest
    container_name: spg-backend
    restart: unless-stopped
    ports:
      - '${BE_SERVER_PORT}:${BE_SERVER_PORT}'
    volumes:
      - ./tmpvol:/tmp
    environment: 
      AUDIT_JSON: ${AUDIT_JSON}
      BE_SERVER_PORT: ${BE_SERVER_PORT}
      BE_DB_URL: ${BE_DB_URL}
      BE_DB_USER: ${BE_DB_USER}
      BE_DB_PASSWORD: ${BE_DB_PASSWORD}
    depends_on:
      - mysql

  frontend:
    build:
      context: ./react-nextjs-frontend/
      dockerfile: Dockerfile
      args:
        BUILD_PROFILE: ${BUILD_PROFILE}
    image: spg-react-nextjs-frontend:latest
    container_name: react-nextjs-frontend
    restart: unless-stopped
    ports:
      - '${FE_SERVER_PORT}:80'
    environment: 
      NEXT_PUBLIC_API_URI: ${NEXT_PUBLIC_API_URI}

volumes:
  db-data:
